name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy_win_mac:
    name: Build package on python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [windows-latest, macOS-latest]
        python-version: [3.5, 3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements.txt
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py bdist_wheel
        twine upload dist/*.whl
  deploy_linux:
    name: Build package on python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [cp35-cp35m, cp36-cp36m, cp37-cp37m, cp38-cp38]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        docker run -v ${PWD}:/data -w /data --env PYTHON_VERSION=${{ matrix.python-version }} quay.io/pypa/manylinux2010_x86_64 bash scripts/repair-wheel.sh
        twine upload wheelhouse/*.whl
  deploy_source:
    name: Build source package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements.txt
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        twine upload dist/*
